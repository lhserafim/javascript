1. Criar um diretório /angular/crud/backend
2. Acessar a pasta backend e digitar o comando: npm init -y para criar o arquivo package.json
3. Em seguida, ainda dentro de backend, digitar: npm i json-server
    3.1. Esta instalação irá atualizar o arquivo package.json, adicionando a dependência e também criar o package-lock.json
    3.2. O que este json faz, basicamente é ler um arquivo json e criar uma api baseada neste json
4. Criar um arquivo /backend/db.json, com um json para ser lido pelo json-server e transformado em api
5. Alterar o arquivo, package.json. Remover o "test" e adicionar "start": "json-server --watch db.json --port 3001"
6. Rodar o teste. Digitar npm start para ver se carrega o end-point
7. Instalar o CLI do angular
    7.1. Em um terminal separado, acessar o diretório crud e digitar: sudo npm i -g @angular/cli
    7.2. Após a instalação, validar instalação: ng version e verificar a instalação
8. Para criar o projeto, dentro da pasta crud, digitar: ng new frontend --minimal 
    8.1. O minimal irá instalar só o essencial para o nosso desenvolvimento
    8.2. O instalador fará duas perguntas. Escolher: y para router e css para estilo
9. Após a instalação, acessar o diretório frontend e digitar: npm start
    9.1. Neste momento temos o backend e o frontend rodando em portas separadas (em dois terminais)
10. IMPORTANTE: Abrir o arquivo de configuração angular.json e fazer duas alterações
    10.1. Alterar para false as opções abaixo, para que sejam gerados os arquivos .css e .html SEPARADOS!
        "inlineTemplate": false,
        "inlineStyle": false,
11. Para corrigir o arquivo app.component.ts, que foi criado com inlineTemplate e inlineStyle, fazer o seguinte ajuste
    11.1. Excluir TUDO que está contido em template e styles
    11.2. Criar uma linha, logo abaixo do selector, como: templateUrl: 'app.component.html'
    11.3. Dentro de src/app, criar o arquivo app.component.html e digitar um <h1> só para testar
    11.4. Dentro do export class AppComponent {, excluir o title = 'frontend';
12. Instalar o MATERIAL DESIGN. No terminal, parar o angular e dentro de frontend digitar: ng add @angular/material
    12.1. Durante a instalação responder as perguntas com enter e y
13. Gerar o HEADER. Em uma janela de terminal separada, acessar: cd angular/crud/frontend/ e fazer a criação do componente header. Digitar: ng g c components/template/header
    13.1. Este comando fará com que o CLI do angular crie o diretório e os 3 arquivos (html, css, ts) separados
        EX.: lhserafim@MacBook-Pro-de-Luiz frontend % ng g c components/template/header
            CREATE src/app/components/template/header/header.component.css (0 bytes)
            CREATE src/app/components/template/header/header.component.html (21 bytes)
            CREATE src/app/components/template/header/header.component.ts (275 bytes)
14. Gerar o FOOTER. Em uma janela de terminal separada, acessar: cd angular/crud/frontend/ e fazer a criação do componente header. Digitar: ng g c components/template/footer
    14.1. O processo gera os 3 arquivos, conforme citados no item 13.1.